{"ast":null,"code":"import _regeneratorRuntime from \"/Users/taylor.ellsworth/RN_Course_Final_Project/taylor-real-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nexport var sendSearchQueryTwitter = function sendSearchQueryTwitter(searchQuery) {\n  return _regeneratorRuntime.async(function sendSearchQueryTwitter$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(\"cmonnn 1 more!\", searchQuery);\n          fetch(\"/twitterApiSearch\", {\n            method: \"post\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              seachParam: searchQuery.searchTerm\n            })\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\nexport var sendSearchQueryReddit = function sendSearchQueryReddit(searchQuery) {\n  return _regeneratorRuntime.async(function sendSearchQueryReddit$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          fetch(\"/redditApiSearch\", {\n            method: \"post\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              searchParam: searchQuery.searchTerm\n            })\n          });\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/Users/taylor.ellsworth/RN_Course_Final_Project/taylor-real-final-project/src/components/Api/SendSearchQueryToApi.js"],"names":["sendSearchQueryTwitter","searchQuery","console","log","fetch","method","headers","body","JSON","stringify","seachParam","searchTerm","sendSearchQueryReddit","searchParam"],"mappings":";AAAA,OAAO,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAMC,WAAN;AAAA;AAAA;AAAA;AAAA;AACpCC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,WAA9B;AACAG,UAAAA,KAAK,CAAC,mBAAD,EAAsB;AACzBC,YAAAA,MAAM,EAAE,MADiB;AAEzBC,YAAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFgB;AAKzBC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,cAAAA,UAAU,EAAET,WAAW,CAACU;AAA1B,aAAf;AALmB,WAAtB,CAAL;;AAFoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B;AAWP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAMX,WAAN;AAAA;AAAA;AAAA;AAAA;AACnCG,UAAAA,KAAK,CAAC,kBAAD,EAAqB;AACxBC,YAAAA,MAAM,EAAE,MADgB;AAExBC,YAAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFe;AAKxBC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEI,cAAAA,WAAW,EAAEZ,WAAW,CAACU;AAA3B,aAAf;AALkB,WAArB,CAAL;;AADmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B","sourcesContent":["export const sendSearchQueryTwitter = async searchQuery => {\n  console.log(\"cmonnn 1 more!\", searchQuery);\n  fetch(\"/twitterApiSearch\", {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ seachParam: searchQuery.searchTerm })\n  });\n};\n\nexport const sendSearchQueryReddit = async searchQuery => {\n  fetch(\"/redditApiSearch\", {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ searchParam: searchQuery.searchTerm })\n  });\n};\n"]},"metadata":{},"sourceType":"module"}