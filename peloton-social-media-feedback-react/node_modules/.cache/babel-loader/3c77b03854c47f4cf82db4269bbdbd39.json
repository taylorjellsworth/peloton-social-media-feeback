{"ast":null,"code":"import _regeneratorRuntime from \"/Users/taylor.ellsworth/RN_Course_Final_Project/taylor-real-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/taylor.ellsworth/RN_Course_Final_Project/taylor-real-final-project/src/components/RetreiveAPI.js\";\nimport React from \"react\";\n\nfunction RetreiveAPI(props) {\n  console.log(\"RetreiveAPI props\", props); //To Do: 1/11\n  // If (twitter) Retreive Twitter API using useEffect\n  // If (facebook) Retreive FB API using useEffect\n  // If (reddit) Retreive Reddit API using useEffect\n  //To Do: Hook up search keyword to initial state\n\n  var initialState = {\n    searchParam: 'Peloton',\n    retreivedTweets: ''\n  };\n\n  var getTweet = function getTweet() {\n    var response, incomingData;\n    return _regeneratorRuntime.async(function getTweet$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('made it to get Tweet!');\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('/twitter'));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            incomingData = _context.sent;\n            console.log('Client: I did it! Tweet fetched: ', incomingData);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var sendSearchParam = function sendSearchParam(e) {\n    e.preventDefault();\n    fetch('/userName', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userName: initialState.searchParam\n      })\n    });\n    getTweet();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Showing \", props.match.params.socialMedia, \" Member posts for\", props.match.params.product, \"!!!\", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: sendSearchParam,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Button to Get Tweets! \")));\n}\n\nexport default RetreiveAPI;","map":{"version":3,"sources":["/Users/taylor.ellsworth/RN_Course_Final_Project/taylor-real-final-project/src/components/RetreiveAPI.js"],"names":["React","RetreiveAPI","props","console","log","initialState","searchParam","retreivedTweets","getTweet","fetch","response","json","incomingData","sendSearchParam","e","preventDefault","method","headers","body","JSON","stringify","userName","match","params","socialMedia","product"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,KAAjC,EAD0B,CAE1B;AACA;AACA;AACA;AAEA;;AACA,MAAMG,YAAY,GAAG;AACnBC,IAAAA,WAAW,EAAE,SADM;AAEnBC,IAAAA,eAAe,EAAE;AAFE,GAArB;;AAKA,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AACfL,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AADe;AAAA,6CAGQK,KAAK,CAAC,UAAD,CAHb;;AAAA;AAGTC,YAAAA,QAHS;AAAA;AAAA,6CAIYA,QAAQ,CAACC,IAAT,EAJZ;;AAAA;AAITC,YAAAA,YAJS;AAKfT,YAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDQ,YAAjD;;AALe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAQA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,CAAC,EAAI;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,KAAK,CAAC,WAAD,EAAc;AACjBO,MAAAA,MAAM,EAAE,MADS;AAEjBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFQ;AAKjBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,QAAQ,EAAEhB,YAAY,CAACC;AAAxB,OAAf;AALW,KAAd,CAAL;AAOAE,IAAAA,QAAQ;AACT,GAVD;;AAaA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACWN,KAAK,CAACoB,KAAN,CAAYC,MAAZ,CAAmBC,WAD9B,uBAEGtB,KAAK,CAACoB,KAAN,CAAYC,MAAZ,CAAmBE,OAFtB,SAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,OAAO,EAAEZ,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADA,CAHF,CADF;AASD;;AAED,eAAeZ,WAAf","sourcesContent":["import React from \"react\";\n\nfunction RetreiveAPI(props) {\n  console.log(\"RetreiveAPI props\", props);\n  //To Do: 1/11\n  // If (twitter) Retreive Twitter API using useEffect\n  // If (facebook) Retreive FB API using useEffect\n  // If (reddit) Retreive Reddit API using useEffect\n\n  //To Do: Hook up search keyword to initial state\n  const initialState = {\n    searchParam: 'Peloton',\n    retreivedTweets: ''\n  };\n\n  const getTweet = async() => {\n    console.log('made it to get Tweet!');\n\n    const response = await fetch('/twitter');\n    const incomingData = await response.json();\n    console.log('Client: I did it! Tweet fetched: ', incomingData);\n  };\n\n  const sendSearchParam = e => {\n    e.preventDefault();\n    fetch('/userName', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({userName: initialState.searchParam})\n    });\n    getTweet()\n  }\n\n\n  return (\n    <div>\n      Showing {props.match.params.socialMedia} Member posts for\n      {props.match.params.product}!!!\n      <p>\n      <button onClick={sendSearchParam}>Button to Get Tweets! </button>\n      </p>\n    </div>\n  );\n}\n\nexport default RetreiveAPI;\n"]},"metadata":{},"sourceType":"module"}