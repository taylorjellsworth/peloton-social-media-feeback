{"ast":null,"code":"import _objectSpread from \"/Users/taylor.ellsworth/RN_Course_Final_Project/taylor-real-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/taylor.ellsworth/RN_Course_Final_Project/taylor-real-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar initialState = {\n  selectedProduct: []\n};\nexport default (function () {\n  var _newSelectedProduct;\n\n  var prevState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  console.log('in redux!!!!', {\n    type: type,\n    payload: payload\n  });\n  var todos = [];\n  var newSelectedProduct = [];\n\n  switch (type) {\n    case \"SELECTED_PRODUCT\":\n      newSelectedProduct = _toConsumableArray(prevState);\n\n      (_newSelectedProduct = newSelectedProduct).splice.apply(_newSelectedProduct, [0, newPosts.length].concat(_toConsumableArray(payload)));\n\n    case \"updateInput\":\n      break;\n    // return { ...prevState, inputValue: payload };\n\n    case \"addTodo\":\n      if (!prevState.inputValue) return _objectSpread({}, prevState);\n      var newTodo = {\n        name: prevState.inputValue,\n        done: false\n      };\n      break;\n    // return { todos: [...prevState.todos, newTodo], inputValue: \"\" };\n\n    case \"completeToggle\":\n      todos = _toConsumableArray(prevState.todos);\n      todos[payload].done = !todos[payload].done;\n      break;\n    // return { ...prevState, todos };\n\n    case \"removeTodo\":\n      todos = _toConsumableArray(prevState.todos);\n      todos.splice(payload, 1); // return { ...prevState, todos };\n\n      break;\n\n    default:\n      return _objectSpread({}, prevState);\n  }\n});","map":{"version":3,"sources":["/Users/taylor.ellsworth/RN_Course_Final_Project/taylor-real-final-project/src/components/ReduxReducer.js"],"names":["initialState","selectedProduct","prevState","type","payload","console","log","todos","newSelectedProduct","splice","newPosts","length","inputValue","newTodo","name","done"],"mappings":";;AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE;AADA,CAArB;AAIA,gBAAe,YAAiD;AAAA;;AAAA,MAAhDC,SAAgD,uEAApCF,YAAoC;;AAAA;AAAA,MAApBG,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC5DC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B;AAAEH,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,OAAO,EAAPA;AAAR,GAA5B;AACA,MAAIG,KAAK,GAAC,EAAV;AACA,MAAIC,kBAAkB,GAAG,EAAzB;;AACA,UAAQL,IAAR;AACE,SAAK,kBAAL;AACEK,MAAAA,kBAAkB,sBAAON,SAAP,CAAlB;;AACA,6BAAAM,kBAAkB,EAACC,MAAnB,6BAA0B,CAA1B,EAA6BC,QAAQ,CAACC,MAAtC,4BAAiDP,OAAjD;;AACF,SAAK,aAAL;AACE;AACA;;AACF,SAAK,SAAL;AACE,UAAI,CAACF,SAAS,CAACU,UAAf,EAA2B,yBAAYV,SAAZ;AAC3B,UAAMW,OAAO,GAAG;AAAEC,QAAAA,IAAI,EAAEZ,SAAS,CAACU,UAAlB;AAA8BG,QAAAA,IAAI,EAAE;AAApC,OAAhB;AACA;AAEA;;AACF,SAAK,gBAAL;AACER,MAAAA,KAAK,sBAAOL,SAAS,CAACK,KAAjB,CAAL;AACAA,MAAAA,KAAK,CAACH,OAAD,CAAL,CAAeW,IAAf,GAAsB,CAACR,KAAK,CAACH,OAAD,CAAL,CAAeW,IAAtC;AACA;AAEA;;AACF,SAAK,YAAL;AACER,MAAAA,KAAK,sBAAOL,SAAS,CAACK,KAAjB,CAAL;AACAA,MAAAA,KAAK,CAACE,MAAN,CAAaL,OAAb,EAAsB,CAAtB,EAFF,CAGE;;AACA;;AAEF;AACE,+BAAYF,SAAZ;AA1BJ;AA4BD,CAhCH","sourcesContent":["const initialState = {\n    selectedProduct: [],\n};\n\nexport default (prevState = initialState, { type, payload }) => {\n    console.log('in redux!!!!', { type, payload });\n    let todos=[];\n    let newSelectedProduct = [];\n    switch (type) {\n      case \"SELECTED_PRODUCT\":\n        newSelectedProduct = [...prevState];\n        newSelectedProduct.splice(0, newPosts.length, ...payload);\n      case \"updateInput\":\n        break;\n        // return { ...prevState, inputValue: payload };\n      case \"addTodo\":\n        if (!prevState.inputValue) return { ...prevState };\n        const newTodo = { name: prevState.inputValue, done: false };\n        break;\n\n        // return { todos: [...prevState.todos, newTodo], inputValue: \"\" };\n      case \"completeToggle\":\n        todos = [...prevState.todos];\n        todos[payload].done = !todos[payload].done;\n        break;\n\n        // return { ...prevState, todos };\n      case \"removeTodo\":\n        todos = [...prevState.todos];\n        todos.splice(payload, 1);\n        // return { ...prevState, todos };\n        break;\n\n      default:\n        return { ...prevState };\n    }\n  };\n  "]},"metadata":{},"sourceType":"module"}