{"ast":null,"code":"import _toConsumableArray from \"/Users/taylor.ellsworth/RN_Course_Final_Project/taylor-real-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/taylor.ellsworth/RN_Course_Final_Project/taylor-real-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar initialState = {\n  selectedProduct: \"All\",\n  selectedSocialMedia: \"\"\n};\nexport default (function () {\n  var prevState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  console.log('in redux!!!!', {\n    type: type,\n    payload: payload\n  });\n  var todos = [];\n\n  switch (type) {\n    case \"SELECTED_PRODUCT\":\n      console.log('SELECTED_PRODUCT!!!!', prevState);\n      return _objectSpread({}, prevState, {\n        selectedProduct: payload.product\n      });\n\n    case \"RESET\":\n      return _objectSpread({}, prevState, {\n        selectedProduct: \"All\"\n      });\n\n    case \"addTodo\":\n      if (!prevState.inputValue) return _objectSpread({}, prevState);\n      var newTodo = {\n        name: prevState.inputValue,\n        done: false\n      };\n      break;\n    // return { todos: [...prevState.todos, newTodo], inputValue: \"\" };\n\n    case \"completeToggle\":\n      todos = _toConsumableArray(prevState.todos);\n      todos[payload].done = !todos[payload].done;\n      break;\n    // return { ...prevState, todos };\n\n    case \"removeTodo\":\n      todos = _toConsumableArray(prevState.todos);\n      todos.splice(payload, 1); // return { ...prevState, todos };\n\n      break;\n\n    default:\n      return _objectSpread({}, prevState);\n  }\n});","map":{"version":3,"sources":["/Users/taylor.ellsworth/RN_Course_Final_Project/taylor-real-final-project/src/components/ReduxReducer.js"],"names":["initialState","selectedProduct","selectedSocialMedia","prevState","type","payload","console","log","todos","product","inputValue","newTodo","name","done","splice"],"mappings":";;AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,KADA;AAEjBC,EAAAA,mBAAmB,EAAE;AAFJ,CAArB;AAKA,gBAAe,YAAiD;AAAA,MAAhDC,SAAgD,uEAApCH,YAAoC;;AAAA;AAAA,MAApBI,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC5DC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B;AAAEH,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,OAAO,EAAPA;AAAR,GAA5B;AACA,MAAIG,KAAK,GAAC,EAAV;;AACA,UAAQJ,IAAR;AACE,SAAK,kBAAL;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCJ,SAApC;AACF,+BAAWA,SAAX;AAAsBF,QAAAA,eAAe,EAAEI,OAAO,CAACI;AAA/C;;AACE,SAAK,OAAL;AACE,+BAAWN,SAAX;AAAsBF,QAAAA,eAAe,EAAE;AAAvC;;AACF,SAAK,SAAL;AACE,UAAI,CAACE,SAAS,CAACO,UAAf,EAA2B,yBAAYP,SAAZ;AAC3B,UAAMQ,OAAO,GAAG;AAAEC,QAAAA,IAAI,EAAET,SAAS,CAACO,UAAlB;AAA8BG,QAAAA,IAAI,EAAE;AAApC,OAAhB;AACA;AAEA;;AACF,SAAK,gBAAL;AACEL,MAAAA,KAAK,sBAAOL,SAAS,CAACK,KAAjB,CAAL;AACAA,MAAAA,KAAK,CAACH,OAAD,CAAL,CAAeQ,IAAf,GAAsB,CAACL,KAAK,CAACH,OAAD,CAAL,CAAeQ,IAAtC;AACA;AAEA;;AACF,SAAK,YAAL;AACEL,MAAAA,KAAK,sBAAOL,SAAS,CAACK,KAAjB,CAAL;AACAA,MAAAA,KAAK,CAACM,MAAN,CAAaT,OAAb,EAAsB,CAAtB,EAFF,CAGE;;AACA;;AAEF;AACE,+BAAYF,SAAZ;AAzBJ;AA2BD,CA9BH","sourcesContent":["const initialState = {\n    selectedProduct: \"All\",\n    selectedSocialMedia: \"\",\n};\n\nexport default (prevState = initialState, { type, payload }) => {\n    console.log('in redux!!!!', { type, payload });\n    let todos=[];\n    switch (type) {\n      case \"SELECTED_PRODUCT\":\n      console.log('SELECTED_PRODUCT!!!!', prevState);\n    return {...prevState, selectedProduct: payload.product};\n      case \"RESET\":\n        return {...prevState, selectedProduct: \"All\"};\n      case \"addTodo\":\n        if (!prevState.inputValue) return { ...prevState };\n        const newTodo = { name: prevState.inputValue, done: false };\n        break;\n\n        // return { todos: [...prevState.todos, newTodo], inputValue: \"\" };\n      case \"completeToggle\":\n        todos = [...prevState.todos];\n        todos[payload].done = !todos[payload].done;\n        break;\n\n        // return { ...prevState, todos };\n      case \"removeTodo\":\n        todos = [...prevState.todos];\n        todos.splice(payload, 1);\n        // return { ...prevState, todos };\n        break;\n\n      default:\n        return { ...prevState };\n    }\n  };\n  "]},"metadata":{},"sourceType":"module"}