{"ast":null,"code":"import _regeneratorRuntime from \"/Users/taylor.ellsworth/RN_Course_Final_Project/taylor-real-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nexport var sendSearchParamTwitter = function sendSearchParamTwitter(searchParameter) {\n  return _regeneratorRuntime.async(function sendSearchParamTwitter$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(\"cmonnn 1 more!\", searchParameter);\n          fetch(\"/twitterApiSearch\", {\n            method: \"post\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              seachParam: searchParameter.searchTerm\n            })\n          }); // await getTweet();\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\nexport var sendSearchParamReddit = function sendSearchParamReddit(searchParameter) {\n  return _regeneratorRuntime.async(function sendSearchParamReddit$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          fetch(\"/redditApiSearch\", {\n            method: \"post\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              searchParam: searchParameter.searchTerm\n            })\n          }); // await getRedditPost();\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/Users/taylor.ellsworth/RN_Course_Final_Project/taylor-real-final-project/src/components/SendSearchQueryToApi.js"],"names":["sendSearchParamTwitter","searchParameter","console","log","fetch","method","headers","body","JSON","stringify","seachParam","searchTerm","sendSearchParamReddit","searchParam"],"mappings":";AAAA,OAAO,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAMC,eAAN;AAAA;AAAA;AAAA;AAAA;AACpCC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,eAA9B;AACAG,UAAAA,KAAK,CAAC,mBAAD,EAAsB;AACzBC,YAAAA,MAAM,EAAE,MADiB;AAEzBC,YAAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFgB;AAKzBC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,cAAAA,UAAU,EAAET,eAAe,CAACU;AAA9B,aAAf;AALmB,WAAtB,CAAL,CAFoC,CASpC;;AAToC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B;AAYP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAMX,eAAN;AAAA;AAAA;AAAA;AAAA;AACnCG,UAAAA,KAAK,CAAC,kBAAD,EAAqB;AACxBC,YAAAA,MAAM,EAAE,MADgB;AAExBC,YAAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFe;AAKxBC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEI,cAAAA,WAAW,EAAEZ,eAAe,CAACU;AAA/B,aAAf;AALkB,WAArB,CAAL,CADmC,CAQnC;;AARmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B","sourcesContent":["export const sendSearchParamTwitter = async searchParameter => {\n  console.log(\"cmonnn 1 more!\", searchParameter);\n  fetch(\"/twitterApiSearch\", {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ seachParam: searchParameter.searchTerm })\n  });\n  // await getTweet();\n};\n\nexport const sendSearchParamReddit = async searchParameter => {\n  fetch(\"/redditApiSearch\", {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ searchParam: searchParameter.searchTerm })\n  });\n  // await getRedditPost();\n};\n"]},"metadata":{},"sourceType":"module"}